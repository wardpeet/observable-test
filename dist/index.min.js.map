{"version":3,"file":"index.min.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/rxjs/_esm5/internal/util/isFunction.js","../node_modules/rxjs/_esm5/internal/util/hostReportError.js","../node_modules/rxjs/_esm5/internal/util/isObject.js","../node_modules/rxjs/_esm5/internal/util/tryCatch.js","../node_modules/rxjs/_esm5/internal/Subscription.js","../node_modules/rxjs/_esm5/internal/Subscriber.js","../node_modules/rxjs/_esm5/internal/util/toSubscriber.js","../node_modules/rxjs/_esm5/internal/util/noop.js","../node_modules/rxjs/_esm5/internal/util/pipe.js","../node_modules/rxjs/_esm5/internal/Observable.js","../node_modules/rxjs/_esm5/internal/config.js","../node_modules/rxjs/_esm5/internal/Observer.js","../node_modules/rxjs/_esm5/internal/util/isArray.js","../node_modules/rxjs/_esm5/internal/util/errorObject.js","../node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","../node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","../node_modules/rxjs/_esm5/internal/symbol/observable.js","../node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","../node_modules/rxjs/_esm5/internal/SubjectSubscription.js","../node_modules/rxjs/_esm5/internal/Subject.js","../node_modules/rxjs/_esm5/internal/BehaviorSubject.js","../node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js","../node_modules/rxjs/_esm5/internal/util/EmptyError.js","../node_modules/rxjs/_esm5/internal/util/TimeoutError.js","../src/user.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n//# sourceMappingURL=tryCatch.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = /*@__PURE__*/ (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        /** @internal */\n        this._parent = null;\n        /** @internal */\n        this._parents = null;\n        /** @internal */\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    /** @internal */\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    /** @nocollapse */\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        /** @internal */ _this.syncErrorValue = null;\n        /** @internal */ _this.syncErrorThrown = false;\n        /** @internal */ _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n                    // node_modules, we cannot rely on `instanceof` checks\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriberSymbol]();\n                        _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        _this.destination = trustedSubscriber;\n                        trustedSubscriber.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     * @nocollapse\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/* tslint:disable:no-empty */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = /*@__PURE__*/ (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        /** @internal */\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    /** @internal */\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     * @nocollapse\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport var config = {\n    /**\n     * The promise constructor used by default for methods such as\n     * {@link toPromise} and {@link forEach}\n     */\n    Promise: undefined,\n    /**\n     * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n     * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n     * call in a try/catch block. It also enables producer interference, a nasty bug\n     * where a multicast can be broken for all observers by a downstream consumer with\n     * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n     * FOR MIGRATION REASONS.\n     */\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","// typeof any so that it we don't have to cast when comparing a result to the error object\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        var _this = _super.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '') || this;\n        _this.errors = errors;\n        _this.name = 'UnsubscriptionError';\n        Object.setPrototypeOf(_this, UnsubscriptionError.prototype);\n        return _this;\n    }\n    return UnsubscriptionError;\n}(Error));\nexport { UnsubscriptionError };\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? /*@__PURE__*/ Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var _this = _super.call(this, 'object unsubscribed') || this;\n        _this.name = 'ObjectUnsubscribedError';\n        Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);\n        return _this;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexport { ObjectUnsubscribedError };\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\n/**\n * @class Subject<T>\n */\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    /**@nocollapse */\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n/**\n * @class BehaviorSubject<T>\n */\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var _this = _super.call(this, 'argument out of range') || this;\n        _this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\n        return _this;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexport { ArgumentOutOfRangeError };\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EmptyError, _super);\n    function EmptyError() {\n        var _this = _super.call(this, 'no elements in sequence') || this;\n        _this.name = 'EmptyError';\n        Object.setPrototypeOf(_this, EmptyError.prototype);\n        return _this;\n    }\n    return EmptyError;\n}(Error));\nexport { EmptyError };\n//# sourceMappingURL=EmptyError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nvar TimeoutError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeoutError, _super);\n    function TimeoutError() {\n        var _this = _super.call(this, 'Timeout has occurred') || this;\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexport { TimeoutError };\n//# sourceMappingURL=TimeoutError.js.map\n","import { BehaviorSubject } from \"rxjs\";\r\n\r\nconst user$ = new BehaviorSubject({});\r\n\r\nsetTimeout(() => {\r\n  console.log(\"timeout\");\r\n  user$.next({});\r\n}, 3000);\r\n\r\nexport default user$;\r\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","isFunction","x","hostReportError","err","setTimeout","isObject","tryCatcher","tryCatchTarget","apply","arguments","e","errorObject","tryCatch","fn","flattenUnsubscriptionErrors","errors","reduce","errs","concat","UnsubscriptionError","isTrustedSubscriber","obj","Subscriber","rxSubscriberSymbol","toSubscriber","nextOrObserver","error","complete","emptyObserver","noop","pipeFromArray","fns","length","input","prev","getPromiseCtor","promiseCtor","config","Promise","Error","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_enable_super_gross_mode_that_will_cause_bad_things","undefined","useDeprecatedSynchronousErrorHandling","value","stack","empty","closed","next","isArray","_super","_this","call","map","i","toString","join","name","tslib_1.__extends","Subscription","unsubscribe","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","_a","index","len","remove","trial","sub","push","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","rxSubscriber","Symbol","for","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","trustedSubscriber","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","_trySubscribe","forEach","resolve","reject","Symbol_observable","pipe","operations","_i","toPromise","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","slice","asObservable","BehaviorSubject","_value","defineProperty","get","getValue","enumerable","configurable","user$","log"],"mappings":"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"}